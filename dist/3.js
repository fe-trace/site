(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[3],{

/***/ "./md/webpack/webpack模块加载.md":
/*!***********************************!*\
  !*** ./md/webpack/webpack模块加载.md ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<h2 id=\\\"webpack\\\">webpack 模块加载</h2>\\n<p>webpack 将源码编译过后，将源码拆分成 chunk，最后输出结果。最终结果在生成时添加了许多模块化相关的代码，下面将介绍 webpack 编译后的模块以及如何做模块加载。</p>\\n<h3 id=\\\"\\\">模块类型</h3>\\n<ul>\\n<li>初始化模块：页面初始化时需要加载的模块</li>\\n<li>动态加载模块：动态引用的模块</li>\\n</ul>\\n<h3 id=\\\"-1\\\">初始化模块</h3>\\n<p>执行流程：新增一个对象，传入对象到具体模块中执行，将模块导出的数据保存在对象中，并缓存在内存中</p>\\n<pre><code>function __webpack_require__(moduleId) {\\n    // 判断模块是否已经加载，已经加载直接返回模块的 exports 对象\\n    if(installedModules[moduleId]) {\\n        return installedModules[moduleId].exports;\\n    }\\n    // 创建一个模块对象，并保存在内存中\\n    var module = installedModules[moduleId] = {\\n        i: moduleId,\\n        l: false,\\n        exports: {}\\n    };\\n    // 传入创建的模块对象，并执行模块代码\\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n    // 设置模块已经加载完成标示\\n    module.l = true;\\n    // 返回模块的 exports 对象\\n    return module.exports;\\n}\\n</code></pre>\\n<h3 id=\\\"-2\\\">动态加载</h3>\\n<p>执行流程：动态加载模块分为两个过程，先将模块代码请求到本地，完成之后再执行一次模块的加载过程（和初始化模块加载逻辑一致）。整个过程通过 promise 来完成，请求异步模块时会创建一个 promise。并将 promise 返回给调用者。在模块加载完成后自动执行，执行过程会改变之前生成 promise 的状态。异步模块的调用者持有 promise 的引用所以会得到通知，从而再以初始化加载模块的方式得到异步模块的返回值。</p>\\n<pre><code>__webpack_require__.e = function requireEnsure(chunkId) {\\n    var promises = [];\\n    var installedChunkData = installedChunks[chunkId];\\n    // 判断模块是否已经加载（重复加载异步模块的情况）\\n    if(installedChunkData !== 0) {\\n\\n        // 模块当前正在加载\\n        if(installedChunkData) {\\n            promises.push(installedChunkData[2]);\\n        } else {\\n            // 创建一个 promise 用来做模块加载通知（将 promise 的 resolve 回调保存起来）\\n            var promise = new Promise(function(resolve, reject) {\\n                installedChunkData = installedChunks[chunkId] = [resolve, reject];\\n            });\\n            // 保存创建的 promise ，用来返回给加载异步模块的调用者\\n            promises.push(installedChunkData[2] = promise);\\n            // 新增 script 标签用来加载 JS 模块\\n            var script = document.createElement('script');\\n            var onScriptComplete;\\n            script.charset = 'utf-8';\\n            script.timeout = 120;\\n            if (__webpack_require__.nc) {\\n                script.setAttribute(\\\"nonce\\\", __webpack_require__.nc);\\n            }\\n            script.src = jsonpScriptSrc(chunkId);\\n            var error = new Error();\\n            onScriptComplete = function (event) {\\n                script.onerror = script.onload = null;\\n                clearTimeout(timeout);\\n                var chunk = installedChunks[chunkId];\\n                if(chunk !== 0) {\\n                    if(chunk) {\\n                        var errorType = event &amp;&amp; (event.type === 'load' ? 'missing' : event.type);\\n                        var realSrc = event &amp;&amp; event.target &amp;&amp; event.target.src;\\n                        error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\\n                        error.name = 'ChunkLoadError';\\n                        error.type = errorType;\\n                        error.request = realSrc;\\n                        chunk[1](error);\\n                    }\\n                    installedChunks[chunkId] = undefined;\\n                }\\n            };\\n            var timeout = setTimeout(function(){\\n                onScriptComplete({ type: 'timeout', target: script });\\n            }, 120000);\\n            script.onerror = script.onload = onScriptComplete;\\n            document.head.appendChild(script);\\n        }\\n    }\\n    // 将在异步请求模块时生成对应的 promise 返回，当请求成功，模块代码执行时会触发改变 promise 的状态，从而通知异步模块的调用者，调用者再通过加载初始化模块的方式，再加载一次异步模块\\n    return Promise.all(promises);\\n};\\n</code></pre>\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9tZC93ZWJwYWNrL3dlYnBhY2vmqKHlnZfliqDovb0ubWQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tZC93ZWJwYWNrL3dlYnBhY2vmqKHlnZfliqDovb0ubWQ/NGE1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjxoMiBpZD1cXFwid2VicGFja1xcXCI+d2VicGFjayDmqKHlnZfliqDovb08L2gyPlxcbjxwPndlYnBhY2sg5bCG5rqQ56CB57yW6K+R6L+H5ZCO77yM5bCG5rqQ56CB5ouG5YiG5oiQIGNodW5r77yM5pyA5ZCO6L6T5Ye657uT5p6c44CC5pyA57uI57uT5p6c5Zyo55Sf5oiQ5pe25re75Yqg5LqG6K645aSa5qih5Z2X5YyW55u45YWz55qE5Luj56CB77yM5LiL6Z2i5bCG5LuL57uNIHdlYnBhY2sg57yW6K+R5ZCO55qE5qih5Z2X5Lul5Y+K5aaC5L2V5YGa5qih5Z2X5Yqg6L2944CCPC9wPlxcbjxoMyBpZD1cXFwiXFxcIj7mqKHlnZfnsbvlnos8L2gzPlxcbjx1bD5cXG48bGk+5Yid5aeL5YyW5qih5Z2X77ya6aG16Z2i5Yid5aeL5YyW5pe26ZyA6KaB5Yqg6L2955qE5qih5Z2XPC9saT5cXG48bGk+5Yqo5oCB5Yqg6L295qih5Z2X77ya5Yqo5oCB5byV55So55qE5qih5Z2XPC9saT5cXG48L3VsPlxcbjxoMyBpZD1cXFwiLTFcXFwiPuWIneWni+WMluaooeWdlzwvaDM+XFxuPHA+5omn6KGM5rWB56iL77ya5paw5aKe5LiA5Liq5a+56LGh77yM5Lyg5YWl5a+56LGh5Yiw5YW35L2T5qih5Z2X5Lit5omn6KGM77yM5bCG5qih5Z2X5a+85Ye655qE5pWw5o2u5L+d5a2Y5Zyo5a+56LGh5Lit77yM5bm257yT5a2Y5Zyo5YaF5a2Y5LitPC9wPlxcbjxwcmU+PGNvZGU+ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xcbiAgICAvLyDliKTmlq3mqKHlnZfmmK/lkKblt7Lnu4/liqDovb3vvIzlt7Lnu4/liqDovb3nm7TmjqXov5Tlm57mqKHlnZfnmoQgZXhwb3J0cyDlr7nosaFcXG4gICAgaWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcXG4gICAgICAgIHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xcbiAgICB9XFxuICAgIC8vIOWIm+W7uuS4gOS4quaooeWdl+Wvueixoe+8jOW5tuS/neWtmOWcqOWGheWtmOS4rVxcbiAgICB2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XFxuICAgICAgICBpOiBtb2R1bGVJZCxcXG4gICAgICAgIGw6IGZhbHNlLFxcbiAgICAgICAgZXhwb3J0czoge31cXG4gICAgfTtcXG4gICAgLy8g5Lyg5YWl5Yib5bu655qE5qih5Z2X5a+56LGh77yM5bm25omn6KGM5qih5Z2X5Luj56CBXFxuICAgIG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xcbiAgICAvLyDorr7nva7mqKHlnZflt7Lnu4/liqDovb3lrozmiJDmoIfnpLpcXG4gICAgbW9kdWxlLmwgPSB0cnVlO1xcbiAgICAvLyDov5Tlm57mqKHlnZfnmoQgZXhwb3J0cyDlr7nosaFcXG4gICAgcmV0dXJuIG1vZHVsZS5leHBvcnRzO1xcbn1cXG48L2NvZGU+PC9wcmU+XFxuPGgzIGlkPVxcXCItMlxcXCI+5Yqo5oCB5Yqg6L29PC9oMz5cXG48cD7miafooYzmtYHnqIvvvJrliqjmgIHliqDovb3mqKHlnZfliIbkuLrkuKTkuKrov4fnqIvvvIzlhYjlsIbmqKHlnZfku6PnoIHor7fmsYLliLDmnKzlnLDvvIzlrozmiJDkuYvlkI7lho3miafooYzkuIDmrKHmqKHlnZfnmoTliqDovb3ov4fnqIvvvIjlkozliJ3lp4vljJbmqKHlnZfliqDovb3pgLvovpHkuIDoh7TvvInjgILmlbTkuKrov4fnqIvpgJrov4cgcHJvbWlzZSDmnaXlrozmiJDvvIzor7fmsYLlvILmraXmqKHlnZfml7bkvJrliJvlu7rkuIDkuKogcHJvbWlzZeOAguW5tuWwhiBwcm9taXNlIOi/lOWbnue7meiwg+eUqOiAheOAguWcqOaooeWdl+WKoOi9veWujOaIkOWQjuiHquWKqOaJp+ihjO+8jOaJp+ihjOi/h+eoi+S8muaUueWPmOS5i+WJjeeUn+aIkCBwcm9taXNlIOeahOeKtuaAgeOAguW8guatpeaooeWdl+eahOiwg+eUqOiAheaMgeaciSBwcm9taXNlIOeahOW8leeUqOaJgOS7peS8muW+l+WIsOmAmuefpe+8jOS7juiAjOWGjeS7peWIneWni+WMluWKoOi9veaooeWdl+eahOaWueW8j+W+l+WIsOW8guatpeaooeWdl+eahOi/lOWbnuWAvOOAgjwvcD5cXG48cHJlPjxjb2RlPl9fd2VicGFja19yZXF1aXJlX18uZSA9IGZ1bmN0aW9uIHJlcXVpcmVFbnN1cmUoY2h1bmtJZCkge1xcbiAgICB2YXIgcHJvbWlzZXMgPSBbXTtcXG4gICAgdmFyIGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcXG4gICAgLy8g5Yik5pat5qih5Z2X5piv5ZCm5bey57uP5Yqg6L2977yI6YeN5aSN5Yqg6L295byC5q2l5qih5Z2X55qE5oOF5Ya177yJXFxuICAgIGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkge1xcblxcbiAgICAgICAgLy8g5qih5Z2X5b2T5YmN5q2j5Zyo5Yqg6L29XFxuICAgICAgICBpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcXG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSk7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIC8vIOWIm+W7uuS4gOS4qiBwcm9taXNlIOeUqOadpeWBmuaooeWdl+WKoOi9vemAmuefpe+8iOWwhiBwcm9taXNlIOeahCByZXNvbHZlIOWbnuiwg+S/neWtmOi1t+adpe+8iVxcbiAgICAgICAgICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XFxuICAgICAgICAgICAgICAgIGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IFtyZXNvbHZlLCByZWplY3RdO1xcbiAgICAgICAgICAgIH0pO1xcbiAgICAgICAgICAgIC8vIOS/neWtmOWIm+W7uueahCBwcm9taXNlIO+8jOeUqOadpei/lOWbnue7meWKoOi9veW8guatpeaooeWdl+eahOiwg+eUqOiAhVxcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdID0gcHJvbWlzZSk7XFxuICAgICAgICAgICAgLy8g5paw5aKeIHNjcmlwdCDmoIfnrb7nlKjmnaXliqDovb0gSlMg5qih5Z2XXFxuICAgICAgICAgICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xcbiAgICAgICAgICAgIHZhciBvblNjcmlwdENvbXBsZXRlO1xcbiAgICAgICAgICAgIHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04JztcXG4gICAgICAgICAgICBzY3JpcHQudGltZW91dCA9IDEyMDtcXG4gICAgICAgICAgICBpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5uYykge1xcbiAgICAgICAgICAgICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKFxcXCJub25jZVxcXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBzY3JpcHQuc3JjID0ganNvbnBTY3JpcHRTcmMoY2h1bmtJZCk7XFxuICAgICAgICAgICAgdmFyIGVycm9yID0gbmV3IEVycm9yKCk7XFxuICAgICAgICAgICAgb25TY3JpcHRDb21wbGV0ZSA9IGZ1bmN0aW9uIChldmVudCkge1xcbiAgICAgICAgICAgICAgICBzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBudWxsO1xcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XFxuICAgICAgICAgICAgICAgIHZhciBjaHVuayA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcXG4gICAgICAgICAgICAgICAgaWYoY2h1bmsgIT09IDApIHtcXG4gICAgICAgICAgICAgICAgICAgIGlmKGNodW5rKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yVHlwZSA9IGV2ZW50ICZhbXA7JmFtcDsgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWFsU3JjID0gZXZlbnQgJmFtcDsmYW1wOyBldmVudC50YXJnZXQgJmFtcDsmYW1wOyBldmVudC50YXJnZXQuc3JjO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBjaHVuayAnICsgY2h1bmtJZCArICcgZmFpbGVkLlxcXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5uYW1lID0gJ0NodW5rTG9hZEVycm9yJztcXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvci50eXBlID0gZXJyb3JUeXBlO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGNodW5rWzFdKGVycm9yKTtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH07XFxuICAgICAgICAgICAgdmFyIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XFxuICAgICAgICAgICAgICAgIG9uU2NyaXB0Q29tcGxldGUoeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pO1xcbiAgICAgICAgICAgIH0sIDEyMDAwMCk7XFxuICAgICAgICAgICAgc2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gb25TY3JpcHRDb21wbGV0ZTtcXG4gICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XFxuICAgICAgICB9XFxuICAgIH1cXG4gICAgLy8g5bCG5Zyo5byC5q2l6K+35rGC5qih5Z2X5pe255Sf5oiQ5a+55bqU55qEIHByb21pc2Ug6L+U5Zue77yM5b2T6K+35rGC5oiQ5Yqf77yM5qih5Z2X5Luj56CB5omn6KGM5pe25Lya6Kem5Y+R5pS55Y+YIHByb21pc2Ug55qE54q25oCB77yM5LuO6ICM6YCa55+l5byC5q2l5qih5Z2X55qE6LCD55So6ICF77yM6LCD55So6ICF5YaN6YCa6L+H5Yqg6L295Yid5aeL5YyW5qih5Z2X55qE5pa55byP77yM5YaN5Yqg6L295LiA5qyh5byC5q2l5qih5Z2XXFxuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XFxufTtcXG48L2NvZGU+PC9wcmU+XCI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./md/webpack/webpack模块加载.md\n");

/***/ })

}]);