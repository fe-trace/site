(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{144:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ("<h2 id=\\"webpackdevserver\\">webpack-dev-server</h2>\\n<p>webpack-dev-server 用于在开发过程中实现热替换功能，笔者用的比较多，但是对于原理不是太了解，现准备深入了解下其实现原理。</p>\\n<h3 id=\\"\\">配置</h3>\\n<pre><code>{\\n    devServer: {\\n        hot/hotOnly: true,\\n        port: 9000,\\n        compress: true,\\n        contentBase: path.join(__dirname, \\"dist\\"),\\n    }\\n    ...\\n}\\n</code></pre>\\n<p>备注：hot-代码更新会刷新页面，hotOnly-代码更新不会刷新页面</p>\\n<h3 id=\\"-1\\">使用</h3>\\n<pre><code>webpack-dev-server --config\\n</code></pre>\\n<p>备注：webpack-cli 默认的配置文件是 (webpack.config|webpackfile)(.js|.json|.ts|..) 匹配结果</p>\\n<h3 id=\\"webpack\\">webpack</h3>\\n<p>在说具体流程之前需要先了解一点点 webpack 的实现原理。</p>\\n<ul>\\n<li>webpack 加载配置文件实例化生成 compiler 对象</li>\\n<li>webpack 执行过程像一条流水线，每个阶段执行完成会触发 compiler.hooks 对象上的回调函数，通过在 hooks 对象上注册事件回调，可以获取编译后的文件信息</li>\\n</ul>\\n<h3 id=\\"-2\\">实现流程</h3>\\n<p>webpack-dev-server/lib/Server.js 部分源码</p>\\n<pre><code>constructor(compiler, options = {}, _log) {\\n    // webpack 实例对象 compiler \\n    this.compiler = compiler;\\n\\n    // 解析 webpack.config.js 得到的配置信息\\n    this.options = options;\\n\\n    // socket server 的实现模块，用来在 node 端启动一个 socket 服务和前端通信\\n    this.socketServerImplementation = getSocketServerImplementation(\\n        this.options\\n    );\\n\\n    // 保存前端建立的socket链接，编译完成后用来发送消息通知前端重新拉取代码\\n    this.sockets = [];\\n\\n    // 在 compiler 对象上监听 comiple/invalid/done 事件，用以通知前端获取更新\\n    this.setupHooks();\\n\\n    // 实例化一个 express 作为 http 服务\\n    this.setupApp();\\n\\n    // 生成中间件保存在 this.middleware 上。所有资源请求都会在其中被拦截，然后从 compiler 对象中获取对应请求的内容并返回\\n    this.setupDevMiddleware();\\n\\n    // 将生成的中间件和 express 实例结合\\n    routes(this.app, this.middleware, this.options);\\n\\n    // 将 express 对象传给 http.createServer 调用 listen 方法，监听到具体端口上，http 服务启动完成\\n    this.createServer();\\n}\\n</code></pre>\\n<h3 id=\\"-3\\">静态资源服务实现细节</h3>\\n<p>首次加载过程</p>\\n<ul>\\n<li>this.setupDevMiddleware 执行过程会生成 express 中间件。webpack编译完成之后会将 done 事件返回的静态资源对象保存在 context.webpackStats 对象上</li>\\n<li>express 加载生成的中间件启动静态资源服务</li>\\n<li>所有静态资源请求被中间件拦截，通过URL从 webpackStats 中获取具体的内容并返回</li>\\n<li>首次加载流程完成</li>\\n<li>前端加载完成后建立 socket 链接</li>\\n<li>node 端响应 socket 链接并保存</li>\\n</ul>\\n<p>更新过程</p>\\n<ul>\\n<li>this.setupHooks 监听了 compiler 中的 done 事件，代码更新之后会通过 socket 发送更新后的 hash 到前端</li>\\n<li>前端收到更新通知后获取更新的代码</li>\\n</ul>\\n<h3 id=\\"-4\\">总结</h3>\\n<p>webpack-dev-server 实现的核心是 webpack 提供的钩子函数，他能获取到编译之后的文件信息，再通过 express 和 middleware 拦截请求进行资源的响应。</p>\\n<h3 id=\\"-5\\">其他</h3>\\n<p>在阅读源码过程中发现一些以前忽略的细节：</p>\\n<ul>\\n<li>require.resolve</li>\\n<li>process API</li>\\n</ul>");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbWQvd2VicGFjay93ZWJwYWNrLWRldi1zZXJ2ZXIubWQ/ODE3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjxoMiBpZD1cXFwid2VicGFja2RldnNlcnZlclxcXCI+d2VicGFjay1kZXYtc2VydmVyPC9oMj5cXG48cD53ZWJwYWNrLWRldi1zZXJ2ZXIg55So5LqO5Zyo5byA5Y+R6L+H56iL5Lit5a6e546w54Ot5pu/5o2i5Yqf6IO977yM56yU6ICF55So55qE5q+U6L6D5aSa77yM5L2G5piv5a+55LqO5Y6f55CG5LiN5piv5aSq5LqG6Kej77yM546w5YeG5aSH5rex5YWl5LqG6Kej5LiL5YW25a6e546w5Y6f55CG44CCPC9wPlxcbjxoMyBpZD1cXFwiXFxcIj7phY3nva48L2gzPlxcbjxwcmU+PGNvZGU+e1xcbiAgICBkZXZTZXJ2ZXI6IHtcXG4gICAgICAgIGhvdC9ob3RPbmx5OiB0cnVlLFxcbiAgICAgICAgcG9ydDogOTAwMCxcXG4gICAgICAgIGNvbXByZXNzOiB0cnVlLFxcbiAgICAgICAgY29udGVudEJhc2U6IHBhdGguam9pbihfX2Rpcm5hbWUsIFxcXCJkaXN0XFxcIiksXFxuICAgIH1cXG4gICAgLi4uXFxufVxcbjwvY29kZT48L3ByZT5cXG48cD7lpIfms6jvvJpob3Qt5Luj56CB5pu05paw5Lya5Yi35paw6aG16Z2i77yMaG90T25seS3ku6PnoIHmm7TmlrDkuI3kvJrliLfmlrDpobXpnaI8L3A+XFxuPGgzIGlkPVxcXCItMVxcXCI+5L2/55SoPC9oMz5cXG48cHJlPjxjb2RlPndlYnBhY2stZGV2LXNlcnZlciAtLWNvbmZpZ1xcbjwvY29kZT48L3ByZT5cXG48cD7lpIfms6jvvJp3ZWJwYWNrLWNsaSDpu5jorqTnmoTphY3nva7mlofku7bmmK8gKHdlYnBhY2suY29uZmlnfHdlYnBhY2tmaWxlKSguanN8Lmpzb258LnRzfC4uKSDljLnphY3nu5Pmnpw8L3A+XFxuPGgzIGlkPVxcXCJ3ZWJwYWNrXFxcIj53ZWJwYWNrPC9oMz5cXG48cD7lnKjor7TlhbfkvZPmtYHnqIvkuYvliY3pnIDopoHlhYjkuobop6PkuIDngrnngrkgd2VicGFjayDnmoTlrp7njrDljp/nkIbjgII8L3A+XFxuPHVsPlxcbjxsaT53ZWJwYWNrIOWKoOi9vemFjee9ruaWh+S7tuWunuS+i+WMlueUn+aIkCBjb21waWxlciDlr7nosaE8L2xpPlxcbjxsaT53ZWJwYWNrIOaJp+ihjOi/h+eoi+WDj+S4gOadoea1geawtOe6v++8jOavj+S4qumYtuauteaJp+ihjOWujOaIkOS8muinpuWPkSBjb21waWxlci5ob29rcyDlr7nosaHkuIrnmoTlm57osIPlh73mlbDvvIzpgJrov4flnKggaG9va3Mg5a+56LGh5LiK5rOo5YaM5LqL5Lu25Zue6LCD77yM5Y+v5Lul6I635Y+W57yW6K+R5ZCO55qE5paH5Lu25L+h5oGvPC9saT5cXG48L3VsPlxcbjxoMyBpZD1cXFwiLTJcXFwiPuWunueOsOa1geeoizwvaDM+XFxuPHA+d2VicGFjay1kZXYtc2VydmVyL2xpYi9TZXJ2ZXIuanMg6YOo5YiG5rqQ56CBPC9wPlxcbjxwcmU+PGNvZGU+Y29uc3RydWN0b3IoY29tcGlsZXIsIG9wdGlvbnMgPSB7fSwgX2xvZykge1xcbiAgICAvLyB3ZWJwYWNrIOWunuS+i+WvueixoSBjb21waWxlciBcXG4gICAgdGhpcy5jb21waWxlciA9IGNvbXBpbGVyO1xcblxcbiAgICAvLyDop6PmnpAgd2VicGFjay5jb25maWcuanMg5b6X5Yiw55qE6YWN572u5L+h5oGvXFxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XFxuXFxuICAgIC8vIHNvY2tldCBzZXJ2ZXIg55qE5a6e546w5qih5Z2X77yM55So5p2l5ZyoIG5vZGUg56uv5ZCv5Yqo5LiA5LiqIHNvY2tldCDmnI3liqHlkozliY3nq6/pgJrkv6FcXG4gICAgdGhpcy5zb2NrZXRTZXJ2ZXJJbXBsZW1lbnRhdGlvbiA9IGdldFNvY2tldFNlcnZlckltcGxlbWVudGF0aW9uKFxcbiAgICAgICAgdGhpcy5vcHRpb25zXFxuICAgICk7XFxuXFxuICAgIC8vIOS/neWtmOWJjeerr+W7uueri+eahHNvY2tldOmTvuaOpe+8jOe8luivkeWujOaIkOWQjueUqOadpeWPkemAgea2iOaBr+mAmuefpeWJjeerr+mHjeaWsOaLieWPluS7o+eggVxcbiAgICB0aGlzLnNvY2tldHMgPSBbXTtcXG5cXG4gICAgLy8g5ZyoIGNvbXBpbGVyIOWvueixoeS4iuebkeWQrCBjb21pcGxlL2ludmFsaWQvZG9uZSDkuovku7bvvIznlKjku6XpgJrnn6XliY3nq6/ojrflj5bmm7TmlrBcXG4gICAgdGhpcy5zZXR1cEhvb2tzKCk7XFxuXFxuICAgIC8vIOWunuS+i+WMluS4gOS4qiBleHByZXNzIOS9nOS4uiBodHRwIOacjeWKoVxcbiAgICB0aGlzLnNldHVwQXBwKCk7XFxuXFxuICAgIC8vIOeUn+aIkOS4remXtOS7tuS/neWtmOWcqCB0aGlzLm1pZGRsZXdhcmUg5LiK44CC5omA5pyJ6LWE5rqQ6K+35rGC6YO95Lya5Zyo5YW25Lit6KKr5oum5oiq77yM54S25ZCO5LuOIGNvbXBpbGVyIOWvueixoeS4reiOt+WPluWvueW6lOivt+axgueahOWGheWuueW5tui/lOWbnlxcbiAgICB0aGlzLnNldHVwRGV2TWlkZGxld2FyZSgpO1xcblxcbiAgICAvLyDlsIbnlJ/miJDnmoTkuK3pl7Tku7blkowgZXhwcmVzcyDlrp7kvovnu5PlkIhcXG4gICAgcm91dGVzKHRoaXMuYXBwLCB0aGlzLm1pZGRsZXdhcmUsIHRoaXMub3B0aW9ucyk7XFxuXFxuICAgIC8vIOWwhiBleHByZXNzIOWvueixoeS8oOe7mSBodHRwLmNyZWF0ZVNlcnZlciDosIPnlKggbGlzdGVuIOaWueazle+8jOebkeWQrOWIsOWFt+S9k+err+WPo+S4iu+8jGh0dHAg5pyN5Yqh5ZCv5Yqo5a6M5oiQXFxuICAgIHRoaXMuY3JlYXRlU2VydmVyKCk7XFxufVxcbjwvY29kZT48L3ByZT5cXG48aDMgaWQ9XFxcIi0zXFxcIj7pnZnmgIHotYTmupDmnI3liqHlrp7njrDnu4boioI8L2gzPlxcbjxwPummluasoeWKoOi9vei/h+eoizwvcD5cXG48dWw+XFxuPGxpPnRoaXMuc2V0dXBEZXZNaWRkbGV3YXJlIOaJp+ihjOi/h+eoi+S8mueUn+aIkCBleHByZXNzIOS4remXtOS7tuOAgndlYnBhY2vnvJbor5HlrozmiJDkuYvlkI7kvJrlsIYgZG9uZSDkuovku7bov5Tlm57nmoTpnZnmgIHotYTmupDlr7nosaHkv53lrZjlnKggY29udGV4dC53ZWJwYWNrU3RhdHMg5a+56LGh5LiKPC9saT5cXG48bGk+ZXhwcmVzcyDliqDovb3nlJ/miJDnmoTkuK3pl7Tku7blkK/liqjpnZnmgIHotYTmupDmnI3liqE8L2xpPlxcbjxsaT7miYDmnInpnZnmgIHotYTmupDor7fmsYLooqvkuK3pl7Tku7bmi6bmiKrvvIzpgJrov4dVUkzku44gd2VicGFja1N0YXRzIOS4reiOt+WPluWFt+S9k+eahOWGheWuueW5tui/lOWbnjwvbGk+XFxuPGxpPummluasoeWKoOi9vea1geeoi+WujOaIkDwvbGk+XFxuPGxpPuWJjeerr+WKoOi9veWujOaIkOWQjuW7uueriyBzb2NrZXQg6ZO+5o6lPC9saT5cXG48bGk+bm9kZSDnq6/lk43lupQgc29ja2V0IOmTvuaOpeW5tuS/neWtmDwvbGk+XFxuPC91bD5cXG48cD7mm7TmlrDov4fnqIs8L3A+XFxuPHVsPlxcbjxsaT50aGlzLnNldHVwSG9va3Mg55uR5ZCs5LqGIGNvbXBpbGVyIOS4reeahCBkb25lIOS6i+S7tu+8jOS7o+eggeabtOaWsOS5i+WQjuS8mumAmui/hyBzb2NrZXQg5Y+R6YCB5pu05paw5ZCO55qEIGhhc2gg5Yiw5YmN56uvPC9saT5cXG48bGk+5YmN56uv5pS25Yiw5pu05paw6YCa55+l5ZCO6I635Y+W5pu05paw55qE5Luj56CBPC9saT5cXG48L3VsPlxcbjxoMyBpZD1cXFwiLTRcXFwiPuaAu+e7kzwvaDM+XFxuPHA+d2VicGFjay1kZXYtc2VydmVyIOWunueOsOeahOaguOW/g+aYryB3ZWJwYWNrIOaPkOS+m+eahOmSqeWtkOWHveaVsO+8jOS7luiDveiOt+WPluWIsOe8luivkeS5i+WQjueahOaWh+S7tuS/oeaBr++8jOWGjemAmui/hyBleHByZXNzIOWSjCBtaWRkbGV3YXJlIOaLpuaIquivt+axgui/m+ihjOi1hOa6kOeahOWTjeW6lOOAgjwvcD5cXG48aDMgaWQ9XFxcIi01XFxcIj7lhbbku5Y8L2gzPlxcbjxwPuWcqOmYheivu+a6kOeggei/h+eoi+S4reWPkeeOsOS4gOS6m+S7peWJjeW/veeVpeeahOe7huiKgu+8mjwvcD5cXG48dWw+XFxuPGxpPnJlcXVpcmUucmVzb2x2ZTwvbGk+XFxuPGxpPnByb2Nlc3MgQVBJPC9saT5cXG48L3VsPlwiOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///144\n')}}]);